# Docker Compose para Desenvolvimento
version: '3.8'

services:
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-intelligent_document_search}
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET:-documents-dev}
      - S3_REGION=${S3_REGION:-us-east-1}
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
      - .:/app  # Hot reload para desenvolvimento
    restart: unless-stopped
    command: uvicorn interface.main:app --host 0.0.0.0 --port 8000 --reload

  postgres:
    image: pgvector/pgvector:pg16
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres123}
      - POSTGRES_DB=${POSTGRES_DB:-intelligent_document_search}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped

  worker-documents:
    build: .
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-intelligent_document_search}
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET:-documents-dev}
      - S3_REGION=${S3_REGION:-us-east-1}
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
      - .:/app  # Hot reload para desenvolvimento
    restart: unless-stopped
    command: python worker.py --queues document_processing

  worker-cleanup:
    build: .
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-intelligent_document_search}
      - REDIS_URL=redis://redis:6379/0
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY}
      - S3_BUCKET=${S3_BUCKET:-documents-dev}
      - S3_REGION=${S3_REGION:-us-east-1}
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
      - .:/app  # Hot reload para desenvolvimento
    restart: unless-stopped
    command: python worker.py --queues cleanup_tasks

volumes:
  postgres_data:
  redis_data: